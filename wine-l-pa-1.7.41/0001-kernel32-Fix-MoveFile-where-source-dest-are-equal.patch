From 3203e53335f242e632a59250e55e233839199a96 Mon Sep 17 00:00:00 2001
From: Bruno Jesus <00cpxxx@gmail.com>
Date: Fri, 9 Mar 2012 03:27:32 -0300
Subject: kernel32: Fix MoveFile where source and dest are equal

Fixes bug #27084.

If the origin and destination are exact the same or if they differ only in case the movefile operation must succeed.
---
 dlls/kernel32/path.c       |    6 ++++--
 dlls/kernel32/tests/file.c |   13 +++++++++++--
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/dlls/kernel32/path.c b/dlls/kernel32/path.c
index e376def..ac1eb81 100644
--- a/dlls/kernel32/path.c
+++ b/dlls/kernel32/path.c
@@ -1069,6 +1069,7 @@ BOOL WINAPI MoveFileWithProgressW( LPCWSTR source, LPCWSTR dest,
     NTSTATUS status;
     HANDLE source_handle = 0, dest_handle;
     ANSI_STRING source_unix, dest_unix;
+    int pathCmp;
 
     TRACE("(%s,%s,%p,%p,%04x)\n",
           debugstr_w(source), debugstr_w(dest), fnProgress, param, flag );
@@ -1089,6 +1090,7 @@ BOOL WINAPI MoveFileWithProgressW( LPCWSTR source, LPCWSTR dest,
         SetLastError( ERROR_PATH_NOT_FOUND );
         return FALSE;
     }
+    pathCmp = strcmpiW( source, dest );
     source_unix.Buffer = NULL;
     dest_unix.Buffer = NULL;
     attr.Length = sizeof(attr);
@@ -1127,7 +1129,7 @@ BOOL WINAPI MoveFileWithProgressW( LPCWSTR source, LPCWSTR dest,
     if (status == STATUS_SUCCESS)  /* destination exists */
     {
         NtClose( dest_handle );
-        if (!(flag & MOVEFILE_REPLACE_EXISTING))
+        if (!(flag & MOVEFILE_REPLACE_EXISTING) && pathCmp)
         {
             SetLastError( ERROR_ALREADY_EXISTS );
             RtlFreeUnicodeString( &nt_name );
@@ -1146,7 +1148,7 @@ BOOL WINAPI MoveFileWithProgressW( LPCWSTR source, LPCWSTR dest,
         goto error;
     }
 
-    status = wine_nt_to_unix_file_name( &nt_name, &dest_unix, FILE_OPEN_IF, FALSE );
+    status = wine_nt_to_unix_file_name( &nt_name, &dest_unix, FILE_OPEN_IF, !pathCmp );
     RtlFreeUnicodeString( &nt_name );
     if (status != STATUS_SUCCESS && status != STATUS_NO_SUCH_FILE)
     {
diff --git a/dlls/kernel32/tests/file.c b/dlls/kernel32/tests/file.c
index f2a9a07..2e28332 100644
--- a/dlls/kernel32/tests/file.c
+++ b/dlls/kernel32/tests/file.c
@@ -573,7 +573,7 @@ static void test__lwrite( void )
 
 static void test_CopyFileA(void)
 {
-    char temp_path[MAX_PATH];
+    char temp_path[MAX_PATH], *ptr;
     char source[MAX_PATH], dest[MAX_PATH];
     static const char prefix[] = "pfx";
     HANDLE hfile;
@@ -591,7 +591,16 @@ static void test_CopyFileA(void)
     ok(ret != 0, "GetTempFileNameA error %d\n", GetLastError());
 
     ret = MoveFileA(source, source);
-    todo_wine ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
+    ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
+
+    /* rename only the case of a file using MoveFile */
+    strcpy(dest, source);
+    ptr = strstr(dest, prefix);
+    *ptr = toupper(*ptr);
+    ret = MoveFileA(source, dest);
+    ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
+    ret = MoveFileA(source, dest); /* must work because it's not case sensitive */
+    ok(ret, "MoveFileA: failed, error %d\n", GetLastError());
 
     /* copying a file to itself must fail */
     retok = CopyFileA(source, source, FALSE);
-- 
1.7.2.5

