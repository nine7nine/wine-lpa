diff -ur a/dlls/rpcrt4/ndr_clientserver.c b/dlls/rpcrt4/ndr_clientserver.c
--- a/dlls/rpcrt4/ndr_clientserver.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/rpcrt4/ndr_clientserver.c	2013-09-28 22:09:29.034199107 -0400
@@ -213,7 +213,10 @@
   stubmsg->RpcMsg->BufferLength = buffer - (unsigned char *)stubmsg->RpcMsg->Buffer;
   status = I_RpcSendReceive(stubmsg->RpcMsg);
   if (status != RPC_S_OK)
+    return NULL;
+/*  skip exception here
     RpcRaiseException(status);
+*/
 
   stubmsg->BufferLength = stubmsg->RpcMsg->BufferLength;
   stubmsg->BufferStart = stubmsg->RpcMsg->Buffer;
diff -ur a/dlls/rpcrt4/ndr_contexthandle.c b/dlls/rpcrt4/ndr_contexthandle.c
--- a/dlls/rpcrt4/ndr_contexthandle.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/rpcrt4/ndr_contexthandle.c	2013-09-28 22:09:29.034199107 -0400
@@ -358,3 +358,11 @@
     RPCRT4_PushThreadContextHandle(SContext);
     return SContext;
 }
+
+/***********************************************************************
+ *           RpcSsDontSerializeContext [RPCRT4.@]
+ */
+void WINAPI RpcSsDontSerializeContext(void)
+{
+    FIXME("stub\n");
+}
diff -ur a/dlls/rpcrt4/rpc_message.c b/dlls/rpcrt4/rpc_message.c
--- a/dlls/rpcrt4/rpc_message.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/rpcrt4/rpc_message.c	2013-09-28 22:09:29.053199106 -0400
@@ -278,7 +278,7 @@
   header->bind_ack.assoc_gid = AssocGroupId;
   server_address = (RpcAddressString*)(&header->bind_ack + 1);
   server_address->length = strlen(ServerAddress) + 1;
-  strcpy(server_address->string, ServerAddress);
+  memcpy(server_address->string, ServerAddress, server_address->length);
   /* results is 4-byte aligned */
   results = (RpcResultList*)((ULONG_PTR)server_address + ROUND_UP(FIELD_OFFSET(RpcAddressString, string[server_address->length]), 4));
   results->num_results = ResultCount;
diff -ur a/dlls/rpcrt4/rpcrt4.spec b/dlls/rpcrt4/rpcrt4.spec
--- a/dlls/rpcrt4/rpcrt4.spec	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/rpcrt4/rpcrt4.spec	2013-09-28 22:09:29.054199106 -0400
@@ -471,7 +471,7 @@
 @ stub RpcSsContextLockShared # wxp
 @ stdcall RpcSsDestroyClientContext(ptr)
 @ stub RpcSsDisableAllocate
-@ stub RpcSsDontSerializeContext
+@ stdcall RpcSsDontSerializeContext()
 @ stub RpcSsEnableAllocate
 @ stub RpcSsFree
 @ stub RpcSsGetContextBinding
diff -ur a/dlls/rsaenh/rsaenh.c b/dlls/rsaenh/rsaenh.c
--- a/dlls/rsaenh/rsaenh.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/rsaenh/rsaenh.c	2013-09-28 22:09:29.060199106 -0400
@@ -3382,6 +3382,12 @@
     TRACE("(hProv=%08lx, hKey=%08lx, dwParam=%08x, pbData=%p, dwFlags=%08x)\n", hProv, hKey,
           dwParam, pbData, dwFlags);
 
+    if (!pbData)
+    {
+        SetLastError(ERROR_INVALID_PARAMETER);
+        return FALSE;
+    }
+
     if (!is_valid_handle(&handle_table, hProv, RSAENH_MAGIC_CONTAINER))
     {
         SetLastError(NTE_BAD_UID);
diff -ur a/dlls/setupapi/install.c b/dlls/setupapi/install.c
--- a/dlls/setupapi/install.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/setupapi/install.c	2013-09-28 22:09:29.089199104 -0400
@@ -386,6 +386,19 @@
         }
         else
         {
+            /*in windows 98 we must expand string before write it to registry*/
+            if ((GetVersion() & 0x80000000) && (type == REG_EXPAND_SZ)) 
+            {
+                WCHAR *new_str;
+                DWORD new_size;
+
+                new_size = ExpandEnvironmentStringsW( str, NULL, 0);
+                new_str = HeapAlloc( GetProcessHeap(), 0, new_size * sizeof(WCHAR));
+                ExpandEnvironmentStringsW( str, new_str, new_size);
+                HeapFree( GetProcessHeap(), 0, str );
+                str = new_str;
+                type = REG_SZ;
+            }
             TRACE( "setting value %s to %s\n", debugstr_w(value), debugstr_w(str) );
             if (str) RegSetValueExW( hkey, value, 0, type, (BYTE *)str, size * sizeof(WCHAR) );
             else RegSetValueExW( hkey, value, 0, type, (const BYTE *)&empty, sizeof(WCHAR) );
diff -ur a/dlls/sfc_os/sfc_os.c b/dlls/sfc_os/sfc_os.c
--- a/dlls/sfc_os/sfc_os.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/sfc_os/sfc_os.c	2013-09-28 22:09:29.093199104 -0400
@@ -77,7 +77,7 @@
     }
     else
     {
-        FIXME("(%p, %s) stub\n", RpcHandle, debugstr_w(ProtFileName));
+        TRACE("(%p, %s) stub\n", RpcHandle, debugstr_w(ProtFileName));
         reported = TRUE;
     }
 
@@ -111,7 +111,7 @@
     }
     else
     {
-        FIXME("(%p, %s) stub\n", hKey, debugstr_w(lpSubKey));
+        TRACE("(%p, %s) stub\n", hKey, debugstr_w(lpSubKey));
         reported = TRUE;
     }
 
diff -ur a/dlls/kernel32/except.c b/dlls/kernel32/except.c
--- a/dlls/kernel32/except.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/kernel32/except.c	2013-09-28 22:09:28.481199140 -0400
@@ -40,6 +40,7 @@
 
 #include <stdarg.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
 #include "windef.h"
@@ -53,6 +54,10 @@
 #include "wine/unicode.h"
 #include "wine/debug.h"
 
+#define GLOBAL_BLOCK_UNKNOWN    0
+#define GLOBAL_BLOCK_YES        1
+#define GLOBAL_BLOCK_NO         2
+
 WINE_DEFAULT_DEBUG_CHANNEL(seh);
 
 static PTOP_LEVEL_EXCEPTION_FILTER top_filter;
@@ -464,8 +469,23 @@
 LPTOP_LEVEL_EXCEPTION_FILTER WINAPI SetUnhandledExceptionFilter(
                                           LPTOP_LEVEL_EXCEPTION_FILTER filter )
 {
+    static int global_block = GLOBAL_BLOCK_UNKNOWN;
+
     LPTOP_LEVEL_EXCEPTION_FILTER old = top_filter;
-    top_filter = filter;
+    if (global_block == GLOBAL_BLOCK_UNKNOWN)
+    {
+        const char *env = getenv("WINEDISABLEGEH");
+        global_block = (env ? GLOBAL_BLOCK_YES : GLOBAL_BLOCK_NO);
+    }
+    switch(global_block)
+    {
+        case GLOBAL_BLOCK_NO:
+            top_filter = filter;
+            break;
+        case GLOBAL_BLOCK_YES:
+            MESSAGE("SetUnhandledExceptionFilter(filter=%p) blocked.\n", filter);
+            break;
+    }
     return old;
 }
 
diff -ur a/dlls/kernel32/file.c b/dlls/kernel32/file.c
--- a/dlls/kernel32/file.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/kernel32/file.c	2013-09-28 22:09:28.482199140 -0400
@@ -1196,7 +1196,13 @@
     status = NtLockFile( hFile, 0, NULL, NULL,
                          NULL, &offset, &count, NULL, TRUE, TRUE );
 
-    if (status != STATUS_SUCCESS) SetLastError( RtlNtStatusToDosError(status) );
+    if (status != STATUS_SUCCESS) 
+    {
+        SetLastError( RtlNtStatusToDosError(status) );
+        TRACE( "returning=%d, GetLastError=%d\n",
+           !status, GetLastError() );
+    }
+
     return !status;
 }
 
diff -ur a/dlls/krnl386.exe16/instr.c b/dlls/krnl386.exe16/instr.c
--- a/dlls/krnl386.exe16/instr.c	2013-08-02 14:09:56.000000000 -0400
+++ b/dlls/krnl386.exe16/instr.c	2013-09-28 22:09:28.509199139 -0400
@@ -431,7 +431,11 @@
     long_op = long_addr = (!ISV86(context) && IS_SELECTOR_32BIT(context->SegCs));
     instr = make_ptr( context, context->SegCs, context->Eip, TRUE );
     if (!instr) return ExceptionContinueSearch;
-
+    /* Try to catch logic error */
+    if (IsBadReadPtr(instr, 1)) {
+        ERR("instr=%p context=%p CS=%04lX IP=%04lX\n", instr, context, context->SegCs, context->Eip);
+        return ExceptionContinueSearch;
+    }
     /* First handle any possible prefix */
 
     segprefix = -1;  /* no prefix */
