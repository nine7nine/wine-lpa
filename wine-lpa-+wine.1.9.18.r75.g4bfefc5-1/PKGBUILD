# Maintainer: Jordan Johnston < gmail.com: johnstonljordan >
# Contributor: Daniel Bermond < yahoo-com: danielbermond >

pkgname=wine-lpa
pkgver=atest.release.r5.g2ad4a08+wine.1.9.18.r75.g4bfefc5
pkgrel=1
pkgdesc="A compatibility layer for running Windows programs (staging branch, Git version)"
arch=('i686' 'x86_64')
url="https://github.com/wine-compholio/wine-staging/"
license=('LGPL')
_depends=(
  'attr'             'lib32-attr'
  'fontconfig'       'lib32-fontconfig'
  'lcms2'            'lib32-lcms2'
  'libxml2'          'lib32-libxml2'
  'libxcursor'       'lib32-libxcursor'
  'libxrandr'        'lib32-libxrandr'
  'libxdamage'       'lib32-libxdamage'
  'libxi'            'lib32-libxi'
  'gettext'          'lib32-gettext'
  'freetype2'        'lib32-freetype2'
  'glu'              'lib32-glu'
  'libsm'            'lib32-libsm'
  'gcc-libs'         'lib32-gcc-libs'
  'libpcap'          'lib32-libpcap'
  'desktop-file-utils'
)
makedepends=('git' 'autoconf' 'ncurses' 'bison' 'perl' 'fontforge' 'flex'
  'gcc>=4.5.0-2'          'gcc-multilib>=4.5.0-2'
  'giflib'                'lib32-giflib'
  'libpng'                'lib32-libpng'
  'gnutls'                'lib32-gnutls'
  'libxinerama'           'lib32-libxinerama'
  'libxcomposite'         'lib32-libxcomposite'
  'libxmu'                'lib32-libxmu'
  'libxxf86vm'            'lib32-libxxf86vm'
  'libldap'               'lib32-libldap'
  'mpg123'                'lib32-mpg123'
  'openal'                'lib32-openal'
  'v4l-utils'             'lib32-v4l-utils'
  'alsa-lib'              'lib32-alsa-lib'
  'libxcomposite'         'lib32-libxcomposite'
  'mesa'                  'lib32-mesa'
  'libgl'                 'lib32-libgl'
  'libcl'                 'lib32-libcl'
  'libxslt'               'lib32-libxslt'
  'libpulse'              'lib32-libpulse'
  'libva'                 'lib32-libva'
  'gtk3'                  'lib32-gtk3'
  'gst-plugins-base-libs' 'lib32-gst-plugins-base-libs'
  'samba'
  'opencl-headers'
)
optdepends=(
  'giflib'                'lib32-giflib'
  'libpng'                'lib32-libpng'
  'libldap'               'lib32-libldap'
  'gnutls'                'lib32-gnutls'
  'mpg123'                'lib32-mpg123'
  'openal'                'lib32-openal'
  'v4l-utils'             'lib32-v4l-utils'
  'libpulse'              'lib32-libpulse'
  'alsa-plugins'          'lib32-alsa-plugins'
  'alsa-lib'              'lib32-alsa-lib'
  'libjpeg-turbo'         'lib32-libjpeg-turbo'
  'libxcomposite'         'lib32-libxcomposite'
  'libxinerama'           'lib32-libxinerama'
  'ncurses'               'lib32-ncurses'
  'libcl'                 'lib32-libcl'
  'libxslt'               'lib32-libxslt'
  'libtxc_dxtn'           'lib32-libtxc_dxtn'
  'libva'                 'lib32-libva'
  'gtk3'                  'lib32-gtk3'
  'gst-plugins-base-libs' 'lib32-gst-plugins-base-libs'
  'cups'                  'samba'
  'dosbox'                'oss'
)
options=('staticlibs')
source=(wine-git::'git://source.winehq.org/git/wine.git'
        wine-staging-git::'git+https://github.com/wine-compholio/wine-staging.git'
        add-implementation-setProcessWorkingSetSize.patch
        NI-drag-and-drop.patch
        0050-pipe-check-and-thread-safe-read.patch
        set-realtime-priority-without-wineserver.patch
        Expand-dos-has-entropy-in-order-to-make-collision-le.patch
        fix-obscured-windows.patch
        disable-winedbg-auto-crash-dialog.patch
        Fix-disk-geometry-ioctl.patch
        menu-border-color.patch
        If-a-child-of-the-window-being-disabled-is-the-captu.patch
        hack-for-Ivory-Library-Installer-force-GENERIC_xxx.patch
        disable-wine-prefix-update-window.patch
        L-defeat-dialog-box.patch
        0003-ntdll-Add-DTrace-probes-for-heap-functions.patch
        0004-ntdll-Add-DTrace-probes-for-critical-section-functio.patch
        0005-ntdll-Provide-handle-to-trap-deadlocks-from-debugger.patch
        0006-Fix-the-order-that-we-enable-an-application-window.patch
        0003-Exit-expand-function-early-if-there-are-no-children.patch
        msvcp100-Sign-compare-warnings-fix.patch
        kernel32_path.patch
        ableton_file-read-write-diff.patch
        0001-kernel32-Fix-MoveFile-where-source-dest-are-equal.patch
        msi_actions_hack.patch
        setidealcpu_wine.patch
        0001-ntdll-Implement-NtQuerySystemInformation-class-0x37.patch
        shush_DnDhelper.patch
        0B-msi_check_return_value_of_ITypeLib_GetLibAttr.patch
        update_embedded_window.patch
        shush_gdi_noHDC.patch
        Fix_u-he_plugins-win32_find_data_nogui.patch
        0049-override-serial-number-from-environment.patch
        0056-allow-WINEDLLPATH-override.patch
        winemenubuilder-silence-an-err.patch
        valgrind-prevent-crash-hack.patch
        avrtcrit.patch
        advapi_silent_delayShutdown.patch
        threadLSPointer.patch
        user32-menuC_Reason5Menu.patch
        stdint.patch
        wine-gcc49.patch
        winepulse_16channel-7.1surround_hack.patch
        ntdll_pipe_sync_and_pipe_thread_safe.patch
        0001-wineserver-Draft-to-implement-priority-levels-throug.patch
        0007-mciseq-Prevent-busy-wait-while-pausing.patch
        0008-mciseq-Pause-causes-an-ABORT-notification.patch
        0009-mciseq-Make-sure-MCI_WAIT-waits-for-the-player-to-t.patch
        0010-mciseq-Limit-concurrency-when-starting-to-play.patch
        0012-mciseq-Play-returns-the-error-code-from-midiOutOpen.patch
        0020-mciseq-Check-stop-condition-after-sleeping.patch
        0021-mciseq-Remain-responsive-while-processing-large-del.patch
        0023-mciseq-MCI_PLAY-does-not-reset-the-tempo-to-default.patch
        0024-mciseq-Read-the-tempo-from-the-file-when-opening-it.patch
        0025-mciseq-MCI-tempo-is-expressed-in-beats-per-minute.patch
        wine-rt_fprintf.patch
        '30-win32-aliases.conf')
sha256sums=('SKIP'
            'SKIP'
            'be4dcb1768816f5708032e96ccdb7a5a866437718cdf7b6e09989dbba56bbad2'
            '06f40f88883be71e48d5e3d061963b98c5c9da713a9c9daa1e4a6c43d74e5edb'
            '3625c168296c4d230114ca17f2fa89ffde754bd888caa9ec34352ea0a80bb1da'
            '7b37e02f62733299e429e531f2fe1702cc58a4f6850dad7c9e413dc313da4fee'
            'c7462f0a5ca0aa8c8dd0e742a52610438161a618d6deb15c6267e96567ed6f57'
            'c52fd6ed03f28d249b659efb8f9fd1f571a620156614806e67331a98e9d14593'
            '86b674b9cadaa7c84dacf1c6647eb4deefc998eb831fcb053c543c0cb34e1b3c'
            '4c2e67523d15103c9e4a328080f5d535024cb43df6c5278fd276fada886a39e3'
            'b8b78bf216dfdeeb6530b59058526706231b5eff887a505a122e517228606083'
            'fb03d18bc01a90ac6cad46b74ad6add0a39fb9a033dabd602c7911acaa59510e'
            'acaf30b3c16fe209b328626ac148a0cf16ef2893ff3dba76ca2ba21c16017e21'
            '824f4b8e91981e0222880084d7fab775d2038b5ec33c5f368e341604076572c3'
            '18c41a3785d4dc8f56cc828ba112926b16323fbc64168c6f01f852725cb42800'
            'b920ad00c4c6dae89877d7aeaded1eb830393e65002dcdc52cd0f2b5a9f94291'
            'df29f9686c3deffbc1beff3fd7490b0db75658bebeb80d29fd68551279b5f0d0'
            '2dabe704d6757fa37d5b10ec7d9ffbe9ee3a8fea72571074dc622c80f15acf9b'
            '15e81edd34e8058c905f14737af366633a8c3d178ae37b78ccd775eab1fea8b0'
            'dcb382d162309ffcff694d29e358a9c46d2b9cf20d6fac1315d34d262edcebb7'
            'f43f6e4747aee26daad26a1610b25ed2b6ef90e023340b3ecdbaefbb6c77113b'
            'dde08cc2b292654cb77e05a9bedb0c82994fc338f8c77c232c831c50886a142f'
            'c4421d52f60c80bff991e2aea23bf2d279e44c42f1b975abee452474ba7b94ff'
            'bc6b1e7263764010fd2a98c1dc4119abdfb922e3cd0400cdfdf077dfb294e470'
            'a1d1faab588716a5dd6e2fa8fc54e121808551c94c6622340ed259fbca52ee8f'
            '5978f12bf4522f07033dd4667d44c587052ff1eb8d1c0a6f93a35d4c54169cc2'
            'ea24318d8b5b9ea307697130b21c6a0bc60ca57e419c3ee5c65f7466719f0cb7'
            '4407343d6f1683bf51e4a6e1c6cb40d5b468b90cd04436897e9152ba2f1071cc'
            'dcf2275173c795468cfc147f87172df1131e18ab26bd4315e22beda241993489'
            '5dd6915d4f086eeb80c4eee1de386d9dcba259e1b936fdca096a4b75879497fa'
            '5fb19ba7090200cca921f9f886d43e04af2e7564e6cbbebb6dc22ceaa9826624'
            'd0022fae9eb78701a58e49e0d616778191064207d38bfdd3f9506d63b7ee8e03'
            '953a6a2a70a85bd88a3ed0dc15f40b1698352c42bcfc56819e9df1b8d91c9851'
            '5c6823fbc737b2804bd5e62111936d3b90332d33f346b0c898ee319213352f96'
            'dd145c429b11db03fc4eb60181a4ecc10d2b48722d0eec4571a4367839a2f461'
            '3b96a21843d3c0ddaa6a1970d9da258da6b3d70fffb3d6040cf3a1df57200204'
            '5ee3ebd919e6fd9eb7a82e63abc759ab64e2f387b80e5bf8ae8534ea111196b5'
            'd2d138053332013a4d714a2171887367f701c63c7dbaf97403cff30c6000498f'
            'd6eb7654c50813f8d0ee3c886ca83477aa17b77b81a9c0d8019c7b6b08ad75d6'
            'd05f8ea0dfe1210d00ac5e6233bae2c86626ee16ac7ff3aba880da056670c846'
            '49dd6fe17241b1425d055e81e610281b0b06648c589033331e217b48e1a17b83'
            '270f3671abf8390572242eb1ae553ae97672bab5aee9a84305e58e2e8c2a770b'
            '5ad70fd0c1a00658c326bec164d6817b9bb41a6cf27cfab125135322f140495f'
            'fd5020497b0e7316f33ba1480230fee0c557f23fd684bba5d5b68916151e2368'
            '437707f318119719af701bb0d762aa88f0ae9969474b78d1defbcb652b860bee'
            '6893bf70a838bd9cad855ca38c6b119e551cb81c3bd2d4054725b91082fddd1f'
            '5466501d07e617b626c9f224d0f6b3a3bc5b1478ceed5c4b84115971075c4bdd'
            'f200b62e64323b689281fbb1c7e7f08b30fd7bbe20421704f6cbd6f2bba1d050'
            '724f6917e98cd5525513fdbefa59b0609865febdfed20cedb6974473c4bfba67'
            'e5016284334978fc00d68645649ff305442bf3a02a33b289df1cc161099278f9'
            '6e6313992e20821783f73057f85c33001905f70d1a2599eb8785bc817e3cb384'
            '7099b4400c770d9aae68ba00c66dbf407278028be4dd026fa60dd53fe23084e5'
            '9b1dbbbe16500b82d67d4a033c4231357849804e2200d2ee1073802e1a98cbbd'
            'a3bd59d86006b88a19736676230edecffac99a8f4f4c40d3f6a969cb78ab6a55'
            '4660723ac00ab05e7a079c712cdea566b04ebdaec5044d60655c9730537bdebb'
            '071f780fd8f2c95ff98f9e2c544589ec25dc4638b722a7dc861f66ec929b1934'
            '9901a5ee619f24662b241672a7358364617227937d5f6d3126f70528ee5111e7')

if [ "$CARCH" = "i686" ]; then
	# Strip lib32 etc. on i686
	_depends=(${_depends[@]/*32-*/})
	makedepends=(${makedepends[@]/*32-*/} ${_depends[@]})
	makedepends=(${makedepends[@]/*-multilib*/})
	optdepends=(${optdepends[@]/*32-*/})
	provides=(
	          "wine=$(echo ${pkgver} | grep -o '+.*' | cut -c7-)"
	          "wine-staging=$(echo ${pkgver} | grep -o '.*+' | sed 's/.\{1\}$//')"
	          'wine-git'
	          )
	conflicts=('wine' 'wine-staging' 'wine-git')
else
	makedepends=(${makedepends[@]} ${_depends[@]})
	provides=(
	          "wine=$(echo ${pkgver} | grep -o '+.*' | cut -c7-)"
	          "wine-wow64=$(echo ${pkgver} | grep -o '+.*' | cut -c7-)"
	          "wine-staging=$(echo ${pkgver} | grep -o '.*+' | sed 's/.\{1\}$//')"
	          'wine-git'
	          )
	conflicts=('wine' 'wine-wow64' 'wine-staging' 'wine-git' wine-staging-git)
fi

pkgver() {
	cd "${srcdir}"
	
	printf "%s+%s" \
	    "$(cd wine-staging-git && git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g' | cut -c2-)" \
	    "$(cd wine-git   && git describe --long | sed 's/\([^-]*-g\)/r\1/;s/-/./g')"
}

prepare() {
	cd "$srcdir"/wine-git
	
	msg2 "Cleaning the wine source code tree..."
	
	# Restore the wine tree to its git origin state, without wine-staging patches
	#+(necessary for reapllying wine-staging patches in succedent builds,
	#+otherwise the patches will fail to be reapplied)
	git reset --hard HEAD      # Restore tracked files
	git clean -d -x -f         # Delete untracked files

	# Change back to the wine upstream commit that this version of wine-staging is based in
	git checkout $(../wine-staging-git/patches/patchinstall.sh --upstream-commit)
}

build() {
	cd "${srcdir}"
	
	# Delete old build dirs (from previous builds) and make new ones
	rm --recursive --force wine-staging-git-{32,64}-build
	mkdir --parents wine-staging-git-32-build
	
	# Apply all wine-staging patches
	msg2 "Applying wine-staging patches..."
	./wine-staging-git/patches/patchinstall.sh DESTDIR="${srcdir}/wine-git" --all

        # wine-lpa

  cd "$srcdir/wine-git"

  msg2 "Applying Wine-l-pa patchwork" 

#############################################################################

  msg "Applying ntdll_pipe_sync_and_pipe_thread_safe.patch"
  patch -s -Np1 -i $srcdir/ntdll_pipe_sync_and_pipe_thread_safe.patch
  msg2 "         SUCCESS :)"

  msg "Applying set-realtime-priority-without-wineserver.patch"
  patch -s -Np1 -i $srcdir/set-realtime-priority-without-wineserver.patch
  msg2 "         SUCCESS :)"

  msg "Applying disable-wine-prefix-update-window.patch"
  patch -s -Np1 -i $srcdir/disable-wine-prefix-update-window.patch
  msg2 "         SUCCESS :)"

#  msg "Applying L-defeat-dialog-box.patch"
#  patch -s -Np1 -i $srcdir/L-defeat-dialog-box.patch
#  msg2 "         SUCCESS :)"

#############################################################################

  msg "Applying 0007-mciseq-Prevent-busy-wait-while-pausing.patch"
  patch -s -Np1 -i $srcdir/0007-mciseq-Prevent-busy-wait-while-pausing.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0008-mciseq-Pause-causes-an-ABORT-notification.patch"
  patch -s -Np1 -i $srcdir/0008-mciseq-Pause-causes-an-ABORT-notification.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0009-mciseq-Make-sure-MCI_WAIT-waits-for-the-player-to-t.patch"
  patch -s -Np1 -i $srcdir/0009-mciseq-Make-sure-MCI_WAIT-waits-for-the-player-to-t.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0010-mciseq-Limit-concurrency-when-starting-to-play.patch patch"
  patch -s -Np1 -i $srcdir/0010-mciseq-Limit-concurrency-when-starting-to-play.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0012-mciseq-Play-returns-the-error-code-from-midiOutOpen.patch"
  patch -s -Np1 -i $srcdir/0012-mciseq-Play-returns-the-error-code-from-midiOutOpen.patch
  msg2 "        SUCCESS :)"

  msg "Applying 0020-mciseq-Check-stop-condition-after-sleeping.patch"
  patch -s -Np1 -i $srcdir/0020-mciseq-Check-stop-condition-after-sleeping.patch
  msg2 "        SUCCESS :)"

  msg "Applying 0021-mciseq-Remain-responsive-while-processing-large-del.patch"
  patch -s -Np1 -i $srcdir/0021-mciseq-Remain-responsive-while-processing-large-del.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0023-mciseq-MCI_PLAY-does-not-reset-the-tempo-to-default.patch"
  patch -s -Np1 -i $srcdir/0023-mciseq-MCI_PLAY-does-not-reset-the-tempo-to-default.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0024-mciseq-Read-the-tempo-from-the-file-when-opening-it.patch"
  patch -s -Np1 -i $srcdir/0024-mciseq-Read-the-tempo-from-the-file-when-opening-it.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0025-mciseq-MCI-tempo-is-expressed-in-beats-per-minute.patch"
  patch -s -Np1 -i $srcdir/0025-mciseq-MCI-tempo-is-expressed-in-beats-per-minute.patch
  msg2 "         SUCCESS :)"

#############################################################################
 
  msg "Applying NI-drag-drop patch"
  patch -s -Np1 -i $srcdir/NI-drag-and-drop.patch
  msg2 "         SUCCESS :)"

  msg "Applying expand-dos-has-entropy-to-make-less-collision.patch"
  patch -s -Np1 -i $srcdir/Expand-dos-has-entropy-in-order-to-make-collision-le.patch
  msg2 "         SUCCESS :)"

  msg "Applying fix-obscured-windows.patch"
  patch -s -Np1 -i $srcdir/fix-obscured-windows.patch
  msg2 "         SUCCESS :)"
 
  msg "Applying disable-winedbg-auto-crash-dialog.patch"
  patch -s -Np1 -i $srcdir/disable-winedbg-auto-crash-dialog.patch
  msg2 "         SUCCESS :)"

  msg "Applying Fix disk geomtery.ioctl"
  patch -s -Np1 -i $srcdir/Fix-disk-geometry-ioctl.patch
  msg2 "        SUCCESS :)"

  msg "Applying menu-border-color.patch"
  patch -s -Np1 -i $srcdir/menu-border-color.patch
  msg2 "         SUCCESS :)"

  msg "Applying child-window-is-capture-give-WM_CANCELMODE.patch"
  patch -s -Np1 -i $srcdir/If-a-child-of-the-window-being-disabled-is-the-captu.patch
  msg2 "         SUCCESS :)"

  msg "Applying hack-for-Ivory-Library-Installer-force-GENERIC_xxx.patch"
  patch -s -Np1 -i $srcdir/hack-for-Ivory-Library-Installer-force-GENERIC_xxx.patch
  msg "        SUCCESS :)"

  msg "Applying kernel32_path.patch"
  patch -s -Np1 -i $srcdir/kernel32_path.patch
  msg2 "         SUCCESS :)"

#  msg "Applying 0006-Fix-the-order-that-we-enable-an-application-window.patch"
#  patch -s -Np1 -i $srcdir/0006-Fix-the-order-that-we-enable-an-application-window.patch
#  msg2 "         SUCCESS :)"

#  msg "Applying 0003-Exit-expand-function-early-if-there-are-no-children.patch"
#  patch -s -Np1 -i $srcdir/0003-Exit-expand-function-early-if-there-are-no-children.patch
#  msg2 "         SUCCESS :)"

#############################################################################

  msg "Applying 0001-kernel32-Fix-MoveFile-where-source-dest-are-equal.patch"
  patch -s -Np1 -i $srcdir/0001-kernel32-Fix-MoveFile-where-source-dest-are-equal.patch
  msg2 "         SUCCESS :)"

  msg "Applying ableton_file-read-write-diff.patch"
  patch -s -Np1 -i $srcdir/ableton_file-read-write-diff.patch
  msg2 "         SUCCESS :)"

  msg "add-implementation-setProcessWorkingSetSize.patch"
  patch -s -Np1 -i $srcdir/add-implementation-setProcessWorkingSetSize.patch
  msg2 "         SUCCESS :)"

  msg "Applying setidealcpu_wine.patch"
  patch -s -Np1 -i $srcdir/setidealcpu_wine.patch
  msg2 "         SUCCESS :)"

#  msg "Applying 0001-ntdll-Implement-NtQuerySystemInformation-class-0x37.patch"
#  patch -s -Np1 -i $srcdir/0001-ntdll-Implement-NtQuerySystemInformation-class-0x37.patch
#  msg2 "         SUCCESS :)"

  msg "Applying shush_DnDhelper.patch"
  patch -s -Np1 -i $srcdir/shush_DnDhelper.patch
  msg2 "         SUCCESS :)"

  msg "Applying 0B-msi_check_return_value_of_ITypeLib_GetLibAttr.patch"
  patch -s -Np1 -i $srcdir/0B-msi_check_return_value_of_ITypeLib_GetLibAttr.patch
  msg2 "         SUCCESS :)"

  msg "Applying avrtcrit.patch"
  patch -s -Np1 -i $srcdir/avrtcrit.patch
  msg2 "         SUCCESS :)"

#  msg "Applying valgrind-prevent-crash-hack.patch"
#  patch -s -Np1 -i $srcdir/valgrind-prevent-crash-hack.patch
#  msg2 "         SUCCESS :)"

  msg "Applying winemenubuilder-silence-an-err.patch"
  patch -s -Np1 -i $srcdir/winemenubuilder-silence-an-err.patch
  msg2 "         SUCCESS :)"

  msg "Applying threadLSPointer.patch"
  patch -s -Np1 -i $srcdir/threadLSPointer.patch
  msg2 "         SUCCESS :)"

  msg "Applying shush_gdi_noHDC.patch"
  patch -s -Np1 -i $srcdir/shush_gdi_noHDC.patch
  msg2 "         SUCCESS :)"

  msg "Applying Fix_u-he_plugins-win32_find_data_nogui.patch"
  patch -s -Np1 -i $srcdir/Fix_u-he_plugins-win32_find_data_nogui.patch
  msg2 "         SUCCESS :)"

  msg "Applying advapi_silent_delayShutdown.patch"
  patch -s -Np1 -i $srcdir/advapi_silent_delayShutdown.patch
  msg2 "         SUCCESS :)"

  msg "Applying update_embedded_window.patch"
  patch -s -Np1 -i $srcdir/update_embedded_window.patch
  msg2 "         SUCCESS :)"

  msg "Applying user32-menuC_Reason5Menu.patch"
  patch -s -Np1 -i $srcdir/user32-menuC_Reason5Menu.patch
  msg2 "         SUCCESS :)"

  msg "Applying stdint.patch"
  patch -s -Np1 -i $srcdir/stdint.patch
  msg2 "         SUCCESS :)"

  msg "Applying wine-gcc49.patch"
  patch -s -Np1 -i $srcdir/wine-gcc49.patch
  msg2 "         SUCCESS :)"

  msg "Applying Winepulse/ksmedia 16 audio channel hack"
  patch -s -Np1 -i $srcdir/winepulse_16channel-7.1surround_hack.patch
  msg2 "         SUCCESS :)"

  msg "Applying msi_actions_hack.patch"
  patch -s -Np1 -i $srcdir/msi_actions_hack.patch
  msg2 "         SUCCESS :)"

  msg "wine-rt_wine-rt_fprintf.patch"
  patch -s -Np1 -i $srcdir/wine-rt_fprintf.patch
  msg2 "         SUCCESS :)"

        cd "${srcdir}"	
	
	# Build wine 64-bit
	#+(according to the wine wiki this 64-bit/32-bit building order is mandatory)
	
	if [ "$CARCH" = "x86_64" ]; then
	    msg2 "Building Wine-64..."
	    
	    mkdir --parents wine-staging-git-64-build
	    cd  wine-staging-git-64-build
	    
	    ../wine-git/configure \
	                    --prefix=/usr \
	                    --libdir=/usr/lib \
	                    --with-x \
	                    --with-gstreamer \
	                    --enable-win64 \
	                    --with-xattr
	
	    make
	    
	    _wine32opts=(
	            --libdir=/usr/lib32
	            --with-wine64="${srcdir}/wine-staging-git-64-build"
	            )
	    
	    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
	    
	fi
	
	
	# Build wine 32-bit
	
	msg2 "Building Wine-32..."
	
	cd "$srcdir"/wine-staging-git-32-build
	
	../wine-git/configure \
	                --prefix=/usr \
	                --with-x \
	                --with-gstreamer \
	                --with-xattr \
	                "${_wine32opts[@]}"
	                
	make
	
}

package() {
	depends=(${_depends[@]})
	
	# Package wine 32-bit
	#+(according to the wine wiki this reverse 32-bit/64-bit packaging order is important)
	
	msg2 "Packaging Wine-32..."
	
	cd "$srcdir"/wine-staging-git-32-build
	
	if [ "$CARCH" = "i686" ]; then
	
	    make prefix="$pkgdir/usr" install
	    
	else
	
	    make prefix="${pkgdir}/usr" \
	         libdir="${pkgdir}/usr/lib32" \
	         dlldir="${pkgdir}/usr/lib32/wine" install
	         
	
	    # Package wine 64-bit
	    
	    msg2 "Packaging Wine-64..."
	    
	    cd "$srcdir"/wine-staging-git-64-build
	    
	    make prefix="${pkgdir}/usr" \
	         libdir="${pkgdir}/usr/lib" \
	         dlldir="${pkgdir}/usr/lib/wine" install
	         
	fi
	
	
	# Font aliasing settings for Win32 applications
	
	install -d "$pkgdir"/etc/fonts/conf.{avail,d}
	install -m644 "${srcdir}/30-win32-aliases.conf" "${pkgdir}/etc/fonts/conf.avail"
	ln -s ../conf.avail/30-win32-aliases.conf "${pkgdir}/etc/fonts/conf.d/30-win32-aliases.conf"
}
